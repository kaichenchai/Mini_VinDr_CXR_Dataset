nohup: ignoring input
Starting sequential training jobs...
=== Starting 2-bit training ===
/home/kai/mnt/VinDr_datasets/pneumothorax/2_bit_png_norm
adding greyscale tfm
Compose(
    RandomResizedCrop(size=(224, 224), scale=(0.8, 1.0), ratio=(0.75, 1.3333), interpolation=bilinear, antialias=True)
    Grayscale(num_output_channels=3)
    RandomHorizontalFlip(p=0.5)
    ToTensor()
    Normalize(mean=tensor([0.5000, 0.5000, 0.5000]), std=tensor([0.5000, 0.5000, 0.5000]))
)
adding greyscale tfm
Compose(
    Resize(size=(224, 224), interpolation=bilinear, max_size=None, antialias=True)
    Grayscale(num_output_channels=3)
    ToTensor()
    Normalize(mean=tensor([0.5000, 0.5000, 0.5000]), std=tensor([0.5000, 0.5000, 0.5000]))
)
Traceback (most recent call last):
  File "/mnt/data/kai/VinDr_Code/Mini_VinDr_CXR_Dataset/dicom_comparison/training_script.py", line 294, in <module>
    main(
  File "/mnt/data/kai/VinDr_Code/Mini_VinDr_CXR_Dataset/dicom_comparison/training_script.py", line 183, in main
    train_dataset, eval_dataset = load_dataset(
                                  ^^^^^^^^^^^^^
  File "/mnt/data/kai/VinDr_Code/Mini_VinDr_CXR_Dataset/dicom_comparison/training_script.py", line 36, in load_dataset
    train_dataset = ImageDataset(
                    ^^^^^^^^^^^^^
  File "/home/kai/.conda/envs/vindr/lib/python3.12/site-packages/timm/data/dataset.py", line 36, in __init__
    reader = create_reader(
             ^^^^^^^^^^^^^^
  File "/home/kai/.conda/envs/vindr/lib/python3.12/site-packages/timm/data/readers/reader_factory.py", line 38, in create_reader
    assert os.path.exists(root)
           ^^^^^^^^^^^^^^^^^^^^
AssertionError
=== Finished 2-bit training ===
=== Starting 4-bit training ===
/home/kai/mnt/VinDr_datasets/pneumothorax/4_bit_png_norm
adding greyscale tfm
Compose(
    RandomResizedCrop(size=(224, 224), scale=(0.8, 1.0), ratio=(0.75, 1.3333), interpolation=bilinear, antialias=True)
    Grayscale(num_output_channels=3)
    RandomHorizontalFlip(p=0.5)
    ToTensor()
    Normalize(mean=tensor([0.5000, 0.5000, 0.5000]), std=tensor([0.5000, 0.5000, 0.5000]))
)
adding greyscale tfm
Compose(
    Resize(size=(224, 224), interpolation=bilinear, max_size=None, antialias=True)
    Grayscale(num_output_channels=3)
    ToTensor()
    Normalize(mean=tensor([0.5000, 0.5000, 0.5000]), std=tensor([0.5000, 0.5000, 0.5000]))
)
Traceback (most recent call last):
  File "/mnt/data/kai/VinDr_Code/Mini_VinDr_CXR_Dataset/dicom_comparison/training_script.py", line 294, in <module>
    main(
  File "/mnt/data/kai/VinDr_Code/Mini_VinDr_CXR_Dataset/dicom_comparison/training_script.py", line 183, in main
    train_dataset, eval_dataset = load_dataset(
                                  ^^^^^^^^^^^^^
  File "/mnt/data/kai/VinDr_Code/Mini_VinDr_CXR_Dataset/dicom_comparison/training_script.py", line 36, in load_dataset
    train_dataset = ImageDataset(
                    ^^^^^^^^^^^^^
  File "/home/kai/.conda/envs/vindr/lib/python3.12/site-packages/timm/data/dataset.py", line 36, in __init__
    reader = create_reader(
             ^^^^^^^^^^^^^^
  File "/home/kai/.conda/envs/vindr/lib/python3.12/site-packages/timm/data/readers/reader_factory.py", line 38, in create_reader
    assert os.path.exists(root)
           ^^^^^^^^^^^^^^^^^^^^
AssertionError
=== Finished 4-bit training ===
=== Starting 8-bit training ===
/home/kai/mnt/VinDr_datasets/pneumothorax/8_bit_png_norm
adding greyscale tfm
Compose(
    RandomResizedCrop(size=(224, 224), scale=(0.8, 1.0), ratio=(0.75, 1.3333), interpolation=bilinear, antialias=True)
    Grayscale(num_output_channels=3)
    RandomHorizontalFlip(p=0.5)
    ToTensor()
    Normalize(mean=tensor([0.5000, 0.5000, 0.5000]), std=tensor([0.5000, 0.5000, 0.5000]))
)
adding greyscale tfm
Compose(
    Resize(size=(224, 224), interpolation=bilinear, max_size=None, antialias=True)
    Grayscale(num_output_channels=3)
    ToTensor()
    Normalize(mean=tensor([0.5000, 0.5000, 0.5000]), std=tensor([0.5000, 0.5000, 0.5000]))
)
Traceback (most recent call last):
  File "/mnt/data/kai/VinDr_Code/Mini_VinDr_CXR_Dataset/dicom_comparison/training_script.py", line 294, in <module>
    main(
  File "/mnt/data/kai/VinDr_Code/Mini_VinDr_CXR_Dataset/dicom_comparison/training_script.py", line 183, in main
    train_dataset, eval_dataset = load_dataset(
                                  ^^^^^^^^^^^^^
  File "/mnt/data/kai/VinDr_Code/Mini_VinDr_CXR_Dataset/dicom_comparison/training_script.py", line 36, in load_dataset
    train_dataset = ImageDataset(
                    ^^^^^^^^^^^^^
  File "/home/kai/.conda/envs/vindr/lib/python3.12/site-packages/timm/data/dataset.py", line 36, in __init__
    reader = create_reader(
             ^^^^^^^^^^^^^^
  File "/home/kai/.conda/envs/vindr/lib/python3.12/site-packages/timm/data/readers/reader_factory.py", line 38, in create_reader
    assert os.path.exists(root)
           ^^^^^^^^^^^^^^^^^^^^
AssertionError
=== Finished 8-bit training ===
=== Starting 16-bit training ===
/home/kai/mnt/VinDr_datasets/pneumothorax/16_bit_png_norm
adding greyscale tfm
Compose(
    RandomResizedCrop(size=(224, 224), scale=(0.8, 1.0), ratio=(0.75, 1.3333), interpolation=bilinear, antialias=True)
    Grayscale(num_output_channels=3)
    RandomHorizontalFlip(p=0.5)
    ToTensor()
    Normalize(mean=tensor([0.5000, 0.5000, 0.5000]), std=tensor([0.5000, 0.5000, 0.5000]))
)
adding greyscale tfm
Compose(
    Resize(size=(224, 224), interpolation=bilinear, max_size=None, antialias=True)
    Grayscale(num_output_channels=3)
    ToTensor()
    Normalize(mean=tensor([0.5000, 0.5000, 0.5000]), std=tensor([0.5000, 0.5000, 0.5000]))
)
Traceback (most recent call last):
  File "/mnt/data/kai/VinDr_Code/Mini_VinDr_CXR_Dataset/dicom_comparison/training_script.py", line 294, in <module>
    main(
  File "/mnt/data/kai/VinDr_Code/Mini_VinDr_CXR_Dataset/dicom_comparison/training_script.py", line 183, in main
    train_dataset, eval_dataset = load_dataset(
                                  ^^^^^^^^^^^^^
  File "/mnt/data/kai/VinDr_Code/Mini_VinDr_CXR_Dataset/dicom_comparison/training_script.py", line 36, in load_dataset
    train_dataset = ImageDataset(
                    ^^^^^^^^^^^^^
  File "/home/kai/.conda/envs/vindr/lib/python3.12/site-packages/timm/data/dataset.py", line 36, in __init__
    reader = create_reader(
             ^^^^^^^^^^^^^^
  File "/home/kai/.conda/envs/vindr/lib/python3.12/site-packages/timm/data/readers/reader_factory.py", line 38, in create_reader
    assert os.path.exists(root)
           ^^^^^^^^^^^^^^^^^^^^
AssertionError
=== Finished all training jobs ===
